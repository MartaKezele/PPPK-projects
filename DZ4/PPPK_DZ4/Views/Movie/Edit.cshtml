@model PPPK_DZ4.ViewModels.MovieViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Movie", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Movie</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Movie.IDMovie, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movie.IDMovie, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movie.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Movie.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movie.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Movie.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.Actors, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @foreach (var actor in Model.Movie.Actors)
            {
                <dd>
                    @actor.FirstName @actor.LastName
                </dd>
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AllActors, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ListBoxFor(m => m.SelectedActorIDs, Model.AllActors, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.Directors, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @foreach (var director in Model.Movie.Directors)
            {
                <dd>
                    @director.FirstName @director.LastName
                </dd>
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AllDirectors, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ListBoxFor(m => m.SelectedDirectorIDs, Model.AllDirectors, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Picture", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" id="Picture" multiple accept="image/*" name="files" />
        </div>
    </div>

    @foreach (var uploadedFile in Model.Movie.UploadedFiles)
    {
        <div class="form-group">
            <span class="control-label col-md-2">
                <strong>@uploadedFile.Name</strong><br />
                @Ajax.ActionLink("Delete", "Delete", "File",
               new { id = uploadedFile.IDUploadedFile },
               new AjaxOptions { HttpMethod = "Post" })
            </span>
            <div class="col-md-10">
                <img src="~/File?id=@uploadedFile.IDUploadedFile" alt="picture" width="300" height="200" />
            </div>
        </div>
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
